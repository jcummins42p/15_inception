# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    Docker_Volumes.txt                                 :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: jcummins <jcummins@student.42prague.com>   +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2024/11/04 19:21:54 by jcummins          #+#    #+#              #
#    Updated: 2024/11/04 19:30:57 by jcummins         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

What are docker volumes?
- In docker, a volume is a persistent storage location that is used to store data from a container. Volumes are used to persist data from a container even after the container is deleted, and they can be shared between containers.

There are two types of volumes in Docker:
- Bind mount:
	- A file or directory on the host machine that is mounted into a container
	- Any changes made to the bind mount are reflected on the host machine and in containers that mount the same file or directory.

- Named volume:
	- A manged volume that is created and managed by Docker.
	- Stored in a specific location on the host machine
	- Not tied to a specific file or directory on the host.
	- Useful for storing data that needs to be shared between containers
	- Can be easily attached and detached from containers.

You can create and manage volumes using the docker volume command. E.g to create a new volume
	docker volume create my-volume

To mount a volume into a container, you can use the -v flag when starting the container. For example:
	docker run -v mu-volume:/var/lib/mysql mysql

This command will start a container runnign the mysql image and mount the my-volume vollume at /var/lib/mysql in the container. Any data written to this location in the container will be persisted in the volume, evene if the container is deleted.

You can also use docker compose to create and manage volumes. In a compose file, you can define a vloume and attach it to a service. For example:

version: '3'
services:
	db:
		image: mysql
		volumes:
			- db-data:/var/lib/mysql
	volumes:
		db-data:

This compose file defines a db-data volume and attaches it to the db service at /var/lib/mysql. Any data written to this location in the conatiner will be persisted in the volume.
